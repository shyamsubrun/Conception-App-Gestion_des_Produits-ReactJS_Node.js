{"ast":null,"code":"var _jsxFileName = \"/home/shyam/3.Divers/2.TestEtienne/4.git/essa/frontend/src/components/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:3000/api/auth/login', {\n        email,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem('authToken', token); // Stockage du token\n      console.log('Utilisateur connecté avec succès');\n      onLogin(token); // Passe le token au parent ou au state global\n    } catch (error) {\n      var _error$response;\n      console.error('Erreur lors de la connexion :', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      setError('Erreur de connexion. Vérifiez vos informations.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 400,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      sx: {\n        mb: 2\n      },\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      type: \"email\",\n      fullWidth: true,\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Mot de passe\",\n      type: \"password\",\n      fullWidth: true,\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: handleLogin,\n      children: \"Se connecter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"Mo0y3DcwABf2JuX2Ot7Vabl3QMk=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","TextField","Button","Box","Typography","jsxDEV","_jsxDEV","LoginForm","onLogin","_s","email","setEmail","password","setPassword","error","setError","handleLogin","response","post","token","data","localStorage","setItem","console","log","_error$response","message","sx","maxWidth","mx","mt","children","variant","component","mb","fileName","_jsxFileName","lineNumber","columnNumber","label","type","fullWidth","value","onChange","e","target","color","onClick","_c","$RefreshReg$"],"sources":["/home/shyam/3.Divers/2.TestEtienne/4.git/essa/frontend/src/components/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField, Button, Box, Typography } from '@mui/material';\r\n\r\nconst LoginForm = ({ onLogin }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/auth/login', { email, password });\r\n      const token = response.data.token;\r\n      localStorage.setItem('authToken', token); // Stockage du token\r\n      console.log('Utilisateur connecté avec succès');\r\n      onLogin(token); // Passe le token au parent ou au state global\r\n    } catch (error) {\r\n      console.error('Erreur lors de la connexion :', error.response?.data || error.message);\r\n      setError('Erreur de connexion. Vérifiez vos informations.');\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 400, mx: 'auto', mt: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 2 }}>\r\n        Connexion\r\n      </Typography>\r\n      <TextField\r\n        label=\"Email\"\r\n        type=\"email\"\r\n        fullWidth\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        sx={{ mb: 2 }}\r\n      />\r\n      <TextField\r\n        label=\"Mot de passe\"\r\n        type=\"password\"\r\n        fullWidth\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        sx={{ mb: 2 }}\r\n      />\r\n      {error && <Typography color=\"error\" sx={{ mb: 2 }}>{error}</Typography>}\r\n      <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleLogin}>\r\n        Se connecter\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,MAAM,EAAEC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,sCAAsC,EAAE;QAAER,KAAK;QAAEE;MAAS,CAAC,CAAC;MAC9F,MAAMO,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACD,KAAK;MACjCE,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,KAAK,CAAC,CAAC,CAAC;MAC1CI,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MAC/ChB,OAAO,CAACW,KAAK,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOL,KAAK,EAAE;MAAA,IAAAW,eAAA;MACdF,OAAO,CAACT,KAAK,CAAC,+BAA+B,EAAE,EAAAW,eAAA,GAAAX,KAAK,CAACG,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAIN,KAAK,CAACY,OAAO,CAAC;MACrFX,QAAQ,CAAC,iDAAiD,CAAC;IAC7D;EACF,CAAC;EAID,oBACET,OAAA,CAACH,GAAG;IAACwB,EAAE,EAAE;MAAEC,QAAQ,EAAE,GAAG;MAAEC,EAAE,EAAE,MAAM;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC5CzB,OAAA,CAACF,UAAU;MAAC4B,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACN,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EAAC;IAEvD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbhC,OAAA,CAACL,SAAS;MACRsC,KAAK,EAAC,OAAO;MACbC,IAAI,EAAC,OAAO;MACZC,SAAS;MACTC,KAAK,EAAEhC,KAAM;MACbiC,QAAQ,EAAGC,CAAC,IAAKjC,QAAQ,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1Cf,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACFhC,OAAA,CAACL,SAAS;MACRsC,KAAK,EAAC,cAAc;MACpBC,IAAI,EAAC,UAAU;MACfC,SAAS;MACTC,KAAK,EAAE9B,QAAS;MAChB+B,QAAQ,EAAGC,CAAC,IAAK/B,WAAW,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7Cf,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,EACDxB,KAAK,iBAAIR,OAAA,CAACF,UAAU;MAAC0C,KAAK,EAAC,OAAO;MAACnB,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EAAEjB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACvEhC,OAAA,CAACJ,MAAM;MAAC8B,OAAO,EAAC,WAAW;MAACc,KAAK,EAAC,SAAS;MAACL,SAAS;MAACM,OAAO,EAAE/B,WAAY;MAAAe,QAAA,EAAC;IAE5E;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA/CIF,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}